#!/usr/bin/env python
# -*- encoding: utf-8 -*-

import spidev
from time import sleep

'''
The bead controller needs to receive 24bits of data. 
Each 8Bits is in a group to control the three GRB colors

0x80 ==> 0
0xf8 ==> 1

eg:
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, #R
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, #G
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, #B

If the first line is all 0xf8, the final value is 11111111, 
	indicating that the brightness of G is 0xff, that is, 255.
If the first row is all 0x80, then the final value is 00000000, 
	which means the brightness of G is 0x00, which is 0, and goes out.
'''

class WS2812B:

	def __init__(self, bus, device, speed):

		self.spi = spidev.SpiDev()
		#bus , device
		self.spi.open(bus, device)
		self.spi.max_speed_hz = speed * 1000000
		self.spi.mode = 0b1
		self.spi.xfer([0x00])

		self.led_off = [
			# led1 off
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

			# led2
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

			# led3 off
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

			# led4 off
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

			# led5 off
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

			# led6 off
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

			# led7 off
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

			# led8 off
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
		]

		self.led_on = [
			# led1 on, 0 ~ 23, rgb(255, 255, 0)
			0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8,
			0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

			# led2 on, 24 ~ 45, rgb(0, 0, 139)
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0xf8, 0x80, 0x80, 0x80, 0xf8, 0x80, 0xf8, 0xf8,

			# led3 on, rgb(128, 0, 128)
			0xf8, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0xf8, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

			# led4 on, rgb(220, 20, 60)
			0xf8, 0xf8, 0x80, 0xf8, 0xf8, 0xf8, 0x80, 0xf8,
			0x80, 0x80, 0x80, 0xf8, 0x80, 0xf8, 0x80, 0x80,
			0x80, 0x80, 0xf8, 0xf8, 0xf8, 0xf8, 0x80, 0x80,

			# led5 on, rgb(255, 0, 255)
			0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8,

			# led6 on, rgb(1, 0, 0)
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xf8,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

			# led7 on, rgb(255, 192, 203)
			0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8,
			0xf8, 0xf8, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0xf8, 0xf8, 0x80, 0x80, 0xf8, 0x80, 0xf8, 0xf8,

			# led8 on, rgb(75, 0, 130)
			0x80, 0xf8, 0x80, 0x80, 0xf8, 0x80, 0xf8, 0xf8,
			0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
			0xf8, 0x80, 0x80, 0x80, 0x80, 0x80, 0xf8, 0x80,
		]

	def light_in_order(self):
		print("light in order")
		a = 0
		x = 23
		while a < 8 :
			self.spi.xfer(self.led_on[0:x:1])
			sleep(1)
			x += 24
			a += 1


	def all_led_off(self):
		sleep(0.5)
		self.spi.xfer(self.led_off)

if __name__ == "__main__" :
	led = WS2812B(1, 0, 8)
	led.light_in_order()
	led.all_led_off()
